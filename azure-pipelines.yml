# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

name: '$(version)-CI-$(Date:yyyyMMdd)$(Rev:.r)'

variables:
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages

trigger:
- master

pool:
  vmImage: 'windows-latest'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:

    - task: Cache@2
      inputs:
        key: 'nuget | "$(Agent.OS)" | **/packages.lock.json'
        restoreKeys: |
          nuget | "$(Agent.OS)"
          nuget
        path: $(NUGET_PACKAGES)
      displayName: Cache NuGet packages

    - task: Cache@2
      inputs:
        key: 'cake-tools | "$(Agent.OS)" | **/*.cake'
        path: tools
      displayName: Cache Tools packages
      
    - task: PowerShell@2
      displayName: Build & Test
      inputs:
        filePath: 'build.ps1'
        arguments: '--target="Report" --outputDirectory="$(Build.ArtifactStagingDirectory)" --testResultsDirectory=$(Build.ArtifactStagingDirectory)/test-results/'

    - task: PublishTestResults@2
      displayName: Publish Test Results
      inputs:
        testResultsFormat: 'VSTest' # Options: JUnit, NUnit, VSTest, xUnit, cTest
        testResultsFiles: '$(Build.ArtifactStagingDirectory)/test-results/*.trx' 
        #searchFolder: '$(System.DefaultWorkingDirectory)' # Optional
        #mergeTestResults: false # Optional
        #failTaskOnFailedTests: false # Optional
        #testRunTitle: # Optional
        #buildPlatform: # Optional
        #buildConfiguration: # Optional
        #publishRunAttachments: true # Optional

    - task: PublishCodeCoverageResults@1
      displayName: Publish Test Code Coverage Results
      inputs:
        codeCoverageTool: 'cobertura'
        summaryFileLocation: '$(Build.ArtifactStagingDirectory)/test-results/results.cobertura.xml'
        #pathToSources: # Optional
        #reportDirectory: # Optional
        #additionalCodeCoverageFiles: # Optional
        #failIfCoverageEmpty: false # Optional

    - task: PowerShell@2
      displayName: Pack
      inputs:
        filePath: 'build.ps1'
        arguments: '--target="Pack" --outputDirectory="$(Build.ArtifactStagingDirectory)" --package-version="$(version)"'


    - task: PublishBuildArtifacts@1
      displayName: Publish Artifacts
      inputs:
        ArtifactName: $(Build.BuildNumber)
        pathToPublish: $(Build.ArtifactStagingDirectory)